---
import { translate } from '../utils/translations.ts';
let { lang } = Astro.params;
while (!lang || !translate.isValidLang(lang)) {
	lang = 'en';
}
---

<!doctype html>
<html lang={lang} data-theme="light">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<meta
			name="description"
			content={translate.t(lang, 'document.meta.description')}
		/>
		<meta
			name="og:title"
			content={translate.t(lang, 'document.meta.og.title')}
		/>
		<meta
			name="og:description"
			content={translate.t(lang, 'document.meta.og.description')}
		/>
		<link
			rel="stylesheet"
			href="https://fonts.googleapis.com/css2?family=Martian+Mono:wght@600&display=swap"
		/>
		<noscript>
			<link rel="stylesheet" href="/noscript.css" />
		</noscript>
		<link rel="favicon" href="./favicon.ico" />
		<title>{translate.t(lang, 'document.title')}</title>
	</head>
	<body>
		{
			lang != Astro.params.lang && (
				<h1 id="fallback">
					Fallback to English because no language with that name was found
				</h1>
			)
		}
		<button id="theme">{translate.t(lang, 'theme.change')}</button>
		<select id="lang">
			<option data-short="en" selected={lang == 'en'}>English</option>
			<option data-short="it" selected={lang == 'it'}>Italiano</option>
			<option data-short="pl" selected={lang == 'pl'}>Polski</option>
			<option data-short="mi" selected={lang == 'mi'}>MƒÅori</option>
		</select>
		<slot />
		<script src="../scripts/storage.ts"></script>
	</body>
</html>
