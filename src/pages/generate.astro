---
import Layout from '../layouts/Layout.astro';
import '../styles/globals.css';
import '../styles/randomNumber.css';
const min = parseInt(Astro.url.searchParams.get('min')!);
const max = parseInt(Astro.url.searchParams.get('max')!);
const mode = parseInt(Astro.url.searchParams.get('mode')!) as 10 | 2 | 8 | 16;
let numbers = parseInt(Astro.url.searchParams.get('numbers')!) || 1;
let randomNumber = [];
if (
	isNaN(min) ||
	isNaN(max) ||
	min > max ||
	isNaN(mode) ||
	(mode != 10 && mode != 2 && mode != 8 && mode != 16) ||
	(numbers < 1 || numbers > 10)
) {
	return Astro.redirect('/?error');
}
for (let i = 0; i < numbers; i++) {
	randomNumber.push(
		Math.floor(Math.random() * (max - min + 1) + min)
			.toString(mode)
			.toUpperCase(),
	);
}
---

<Layout>
	{
		numbers > 1 ? (
			<h1>
				I {numbers} numeri casuali in base {mode} tra {mode == 16 ? '0x' : ''}
				{min.toString(mode).toUpperCase()} e {mode == 16 ? '0x' : ''}
				{max.toString(mode).toUpperCase()} sono:
			</h1>
		) : (
			<h1>
				Il numero casuale in base {mode} tra {mode == 16 ? '0x' : ''}
				{min.toString(mode).toUpperCase()} e {mode == 16 ? '0x' : ''}
				{max.toString(mode).toUpperCase()} Ã¨:
			</h1>
		)
	}
	<h1>
		{mode == 16 ? '0x' : ''}{randomNumber.join(' | ')}
	</h1>
	<div id="buttons">
		<a href=`/generate?numbers=${numbers}&mode=${mode}&min=${min}&max=${max}`
			><button>Generate Another</button></a
		>
		<a href=`/?numbers=${numbers}&mode=${mode}`><button>Change Intervals</button></a>
	</div>
</Layout>
